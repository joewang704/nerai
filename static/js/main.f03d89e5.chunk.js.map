{"version":3,"sources":["utils.js","data/targets.js","components/game_info.js","components/game.js","data/constants.js","components/shared/modal.js","components/shared/card.js","components/shop.js","utils/localStorage.js","components/settings.js","hooks/game.js","components/app.js","reportWebVitals.js","index.js"],"names":["random","min","max","Math","ceil","floor","degToRad","degrees","PI","useStableCB","callback","values","self","useRef","handler","_len","arguments","length","args","Array","_key","current","TIERS","generateTarget","tier","effects","generateRandomTarget","level","probs","base","l","startingIdx","total","t","rest","generateProbs","rng","bound","chosenTier","UPGRADES","UPGRADE_INFO","baseTargets","descriptions","extraSpawnOnHit","multiOnHit","multiOnConsecutiveHit","INITIAL_UPGRADES","reduce","acc","value","getUpgradeDescription","_ref2","name","STARTING_DECK","Container","styled","div","GameInfo","_ref","timeRemaining","state","useContext","GameContext","upgradeDescriptions","Object","entries","upgrades","filter","_","map","_ref3","join","_jsxs","children","currentScore","goalScore","Game","dispatch","canvasRef","canvas","setCanvas","useState","ctx","setCtx","setTimeRemaining","cursorRef","x","y","targetsRef","stateRef","useEffect","getContext","width","window","innerWidth","height","innerHeight","requestPointerLock","unadjustedMovement","pointerLockChange","lockChangeAlert","onClick","handleClick","document","addEventListener","removeEventListener","exitPointerLock","d3","tickAnimation","stop","pointerLockElement","screenX","screenY","hitTarget","newTargets","radius","target","targetMissed","sqrt","pow","percent","push","createNewTarget","type","payload","inc","setTimeout","Error","targetSize","drawCanvas","fillStyle","fillRect","forEach","beginPath","arc","fill","closePath","drawTargets","timeElapsed","i","spawnTarget","timerSec","timer","toFixed","mozPointerLockElement","mouseMoveMemo","e","_ref4","dx","movementX","sensitivity","dy","movementY","_jsx","ref","Background","Modal","close","_Fragment","createPortal","body","Card","style","borderColor","OptionContainer","CardOption","title","description","selected","borderWidth","fontWeight","Shop","purchaseCardModal","setPurchaseCardModal","money","display","targets","purchaseCard","count","choice","includes","generateRandomUpgrades","disabled","PurchaseCardModal","options","setSelected","collect","initialState","save","key","localStorage","setItem","SettingsModal","isOpen","step","onChange","event","status","getItem","parseInt","fetchInt","INITIAL_GAME_STATE","bumpLevel","reducer","action","newScore","assign","upgrade","React","createContext","App","useReducer","settings","setSettings","startGame","Provider","returnHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f03d89e5.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nexport const random = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\n// Takes in percent chance as a decimal, rolls that percent chance\nexport const rollProbability = (percent) => {\n  return Math.random() < percent; // The maximum is exclusive and the minimum is inclusive\n}\n\nexport const degToRad = (degrees) => Math.PI / 180 * degrees;\n\nexport const useStableCB = (callback, values) => {\n  const self = useRef({\n    values: values,\n    handler: (...args) => {\n      return callback(...args, self.current.values)\n    }\n  });\n  self.current.values = values\n  return self.current.handler\n}","import { random } from \"../utils\"\n\nexport const TIERS = ['gray', 'green', 'blue', 'purple', 'gold']\n\nexport const generateTarget = (tier) => {\n  return {\n    tier,\n    effects: [],\n  }\n}\n\nconst generateProbs = (level) => {\n  const base = [90, 9, 1, 0, 0];\n\n  for (let l = 1; l <= level; l++) {\n    let startingIdx = 2;\n    if (l > 9) {\n      startingIdx = 4\n    } else if (l > 4) {\n      startingIdx = 3\n    }\n    let total = 0;\n    for (let t = startingIdx; t > 0; t--) {\n      base[t] += 1;\n      total += base[t];\n    }\n    const rest = 100 - total;\n    base[0] = rest;\n  }\n  return base;\n}\n\nexport const generateRandomTarget = (level) => {\n  const probs = generateProbs(level);\n\n  const rng = random(0, 101);\n\n  let bound = 0;\n  let chosenTier = 0;\n  for (let tier = 0; tier < probs.length; tier++) {\n    bound += probs[tier];\n    if (rng < bound) {\n      chosenTier = tier;\n      break;\n    }\n  }\n\n  return {\n    tier: chosenTier,\n    effects: [],\n  }\n}\n\nexport const UPGRADES = ['baseTargets', 'extraSpawnOnHit', 'multiOnHit', 'multiOnConsecutiveHit']\nexport const UPGRADE_INFO = {\n  baseTargets: {\n    descriptions: [\n      'Increases base number of targets by 1',\n      'Increases base number of targets by 2',\n      'Increases base number of targets by 3',\n      'Increases base number of targets by 4',\n    ],\n  },\n  extraSpawnOnHit: {\n    descriptions: [\n      '5% chance of extra target spawning on hit',\n      '10% chance of extra target spawning on hit',\n      '15% chance of extra target spawning on hit',\n      '20% chance of extra target spawning on hit',\n    ],\n  },\n  multiOnHit: {\n    descriptions: [\n      'Not implemented yet. Do not choose'\n    ],\n  },\n  multiOnConsecutiveHit: {\n    descriptions: [\n      'Not implemented yet. Do not choose'\n    ],\n  },\n}\nexport const INITIAL_UPGRADES = UPGRADES.reduce((acc, value) => {\n  acc[value] = 0;\n  return acc;\n}, {})\n\nexport const generateRandomUpgrade = () => {\n  return UPGRADES[random(0, UPGRADES.length)];\n}\n\nexport const generateRandomUpgrades = ({ count }) => {\n  const upgrades = [];\n  while (upgrades.length < count) {\n    const choice = generateRandomUpgrade();\n    if (!upgrades.includes(choice)) {\n      upgrades.push(choice);\n    }\n  }\n  return upgrades;\n}\n\nexport const getUpgradeDescription = ({ level, name }) => UPGRADE_INFO[name]['descriptions'][level];\n\nexport const STARTING_DECK = [\n  generateTarget(0),\n  generateTarget(0),\n  generateTarget(0),\n]","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { GameContext } from './app';\nimport { getUpgradeDescription } from '../data/targets';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 80px;\n  background-color: #333;\n  color: white;\n  padding: 12px 24px 24px;\n  display: flex;\n  h1 {\n    margin-right: 48px;\n  }\n`;\n\nconst GameInfo = ({ timeRemaining }) => {\n  const { state } = useContext(GameContext);\n\n  const upgradeDescriptions = Object.entries(state.upgrades)\n    .filter(([_, level]) => level > 0)\n    .map(([name, level]) => getUpgradeDescription({ name, level }))\n    .join(', ');\n\n  return (\n    <Container>\n      <h1>Level {state.level}</h1>\n      <h1>Current Score: {state.currentScore} / {state.goalScore}</h1>\n      <h1>Time Left: {timeRemaining}</h1>\n      <p>Upgrades: {upgradeDescriptions}</p>\n    </Container>\n  );\n};\n\nexport default GameInfo;","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from 'd3-timer';\n\nimport { GameContext } from './app';\nimport GameInfo from './game_info';\nimport { degToRad, random, useStableCB, rollProbability } from '../utils';\nimport { TIERS, generateRandomTarget } from '../data/targets';\n\nconst RADIUS = 5;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Game = () => {\n  const { state, dispatch } = useContext(GameContext);\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  const [timeRemaining, setTimeRemaining] = useState();\n  const cursorRef = useRef({ x: 500, y: 500 });\n  const targetsRef = useRef([]);\n  const stateRef = useRef(state);\n\n  useEffect(() => {\n    stateRef.current = state; \n  }, [state])\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    setCanvas(canvas);\n    const ctx = canvasRef.current.getContext('2d');\n    setCtx(ctx);\n    canvasRef.current.width = window.innerWidth;\n    canvasRef.current.height = window.innerHeight;\n    canvas.requestPointerLock({\n      unadjustedMovement: true,\n    });\n    const pointerLockChange = () => lockChangeAlert(canvas)\n    const onClick = () => handleClick(canvas)\n    document.addEventListener('pointerlockchange', pointerLockChange, false);\n    document.addEventListener('click', onClick);\n\n    return () => {\n      document.removeEventListener('pointerlockchange', pointerLockChange);\n      document.removeEventListener('click', onClick);\n      document.exitPointerLock();\n    };\n  }, [])\n\n  useEffect(() => {\n    let t;\n    if (canvas && ctx) {\n      t = d3.timer(tickAnimation)\n    }\n    return () => t && t.stop()\n  }, [canvas, ctx]);\n\n  const handleClick = (canvas) => {\n    if (!document.pointerLockElement) {\n      // Handle 100ms required delay to relock pointer\n      setTimeout(() => {\n        canvasRef.current.requestPointerLock({\n          unadjustedMovement: true,\n        });\n      }, 100);\n    } else {\n      const screenX = cursorRef.current.x;\n      const screenY = cursorRef.current.y;\n      const targets = targetsRef.current;\n      let hitTarget;\n      const newTargets = targets.filter(({ x, y, radius, target }) => {\n        // Filter out if target clicked inside\n        const targetMissed = Math.sqrt(Math.pow(x - screenX, 2) + Math.pow(y - screenY, 2)) >= (radius + RADIUS);\n        if (!targetMissed) {\n          hitTarget = target;\n        }\n        return targetMissed;\n      });\n\n      if (!hitTarget) {\n        // Player loses points on missing target\n        dispatch({ type: 'hitTarget', payload: { inc: -1 }})\n      } else {\n        const { extraSpawnOnHit } = state.upgrades;\n        if (extraSpawnOnHit > 0 && rollProbability(extraSpawnOnHit * 0.05)) {\n          newTargets.push(createNewTarget());\n          newTargets.push(createNewTarget());\n        }\n        dispatch({ type: 'hitTarget', payload: { inc: hitTarget.tier + 1 }})\n        targetsRef.current = newTargets;\n      }\n    }\n  }\n\n  const createNewTarget = () => {\n    if (!canvasRef.current) {\n      throw new Error('Cannot spawn new target with no canvas');\n    }\n    const { targetSize, level } = state;\n    const { width, height } = canvasRef.current;\n    const x = random(width / 2 - width / 4, width - targetSize - width / 2);\n    const y = random(height / 2 - height / 4, height - targetSize - height / 2);\n    return { x, y, radius: targetSize, target: generateRandomTarget(level) };\n  }\n\n  const spawnTarget = (canvas) => {\n    const { baseTargets } = state.upgrades;\n    if (targetsRef.current.length <= baseTargets && canvas) {\n      for (let i = 0; i < baseTargets; i++) {\n        targetsRef.current.push(createNewTarget());\n      }\n      targetsRef.current.push(createNewTarget());\n    }\n  }\n\n  const drawTargets = (ctx) => {\n    targetsRef.current.forEach(({ x, y, radius, target }) => {\n      ctx.fillStyle = TIERS[target.tier];\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, degToRad(360), true);\n      ctx.fill();\n      ctx.closePath();\n    });\n  };\n\n  const drawCanvas = (canvas, ctx) => {\n    const { width, height } = canvas;\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n\n    drawTargets(ctx);\n\n    // Cursor\n    ctx.fillStyle = \"#f00\";\n    ctx.beginPath();\n    ctx.arc(cursorRef.current.x, cursorRef.current.y, RADIUS, 0, degToRad(360), true);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const tickAnimation = useStableCB((timeElapsed, [canvas, ctx]) => {\n    if (!canvas || !ctx) return;\n\n    spawnTarget(canvas);\n    drawCanvas(canvas, ctx);\n\n    // Handle timer state in game loop\n    const timerSec = (state.timer - timeElapsed / 1000).toFixed(2);\n    if (timerSec <= 0) {\n      return dispatch({ type: 'endRound' });\n    }\n    setTimeRemaining(timerSec);\n\n  }, [canvas, ctx]);\n\n  const lockChangeAlert = (canvas) => {\n    if (document.pointerLockElement === canvas ||\n        document.mozPointerLockElement === canvas) {\n      canvas.addEventListener(\"mousemove\", mouseMoveMemo, false);\n    } else {\n      canvas.removeEventListener(\"mousemove\", mouseMoveMemo, false);\n    }\n  }\n\n  const mouseMoveMemo = useStableCB((e, [cursorRef, canvas]) => {\n    if (!canvas) return;\n    // Edge detection\n    const { x, y } = cursorRef.current;\n    if (x > canvas.width) {\n      cursorRef.current = { x: canvas.width - 1, y }\n      return\n    }\n    if (y > canvas.height) {\n      cursorRef.current = { x, y: canvas.height - 1 }\n      return\n    }  \n    if (x < 0) {\n      cursorRef.current = { x: 1, y }\n      return\n    }\n    if (y < 0) {\n      cursorRef.current = { x, y: 1 }\n      return\n    }\n    const dx = e.movementX * (state.sensitivity || 1);\n    const dy = e.movementY * (state.sensitivity || 1);\n    cursorRef.current = { x: x + dx, y: y + dy }\n  }, [cursorRef, canvas]);\n\n  return (\n    <Container>\n      <GameInfo timeRemaining={timeRemaining} />\n      <canvas ref={canvasRef}>\n      </canvas>\n    </Container>\n  );\n}\n\nexport default Game;\n","export const COLORS = {\n  darkYellow: '#F6BE00',\n  darkRed: '#8b0000',\n  metallicGray: '#A8A9AD',\n  omYellow: '#FACE26',\n  omOrange: '#FD871A',\n  omSand: '#F0E0BE',\n  // TODO: find better colors for HTML defaults\n  common: 'gray',\n  uncommon: 'green',\n  rare: 'blue',\n  epic: 'purple',\n  legendary: 'yellow',\n};\n\n// Testing values\n// export const PURCHASE_CARD_PRICE = 5;\n// export const ROUND_TIME = 5;\n// export const INITIAL_GOAL_SCORE = 1;\n\n// Real values\nexport const PURCHASE_CARD_PRICE = 30;\nexport const ROUND_TIME = 20;\nexport const INITIAL_GOAL_SCORE = 10;","import { createPortal } from \"react-dom\";\nimport styled from '@emotion/styled';\n\nconst Background = styled.div`\n  background-color: black;\n  opacity: .4;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: white;\n  padding: 24px;\n  border-radius: 4px;\n  opacity: 1;\n`;\n\nexport const Modal = ({ children, close }) => {\n  return (\n    <>\n      {createPortal(\n        <>\n        <Container>\n          {children}\n        </Container>\n        <Background onClick={close}></Background>\n        </>, document.body)}\n    </>\n  )\n}","import styled from '@emotion/styled';\n\nimport { TIERS } from \"../../data/targets\";\n\nconst Container = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n`;\n\nexport const Card = ({ tier }) => {\n  return (\n    <Container style={{ borderColor: TIERS[tier] }}>\n      N/A\n    </Container>\n  )\n}\n\nconst OptionContainer = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  cursor: pointer;\n  hover {\n    opacity: .6;\n  }\n`;\n\nexport const CardOption = ({ title, description, onClick, selected }) => {\n  return (\n    <OptionContainer style={{ borderColor: '#eee', borderWidth: selected ? '5px' : '3px', fontWeight: selected ? 'bold' : 'normal' }} onClick={onClick}>\n      {title}<br />\n      {description}\n    </OptionContainer>\n  )\n}","import React, { useState, useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { generateRandomUpgrades, getUpgradeDescription, UPGRADES } from '../data/targets';\nimport { PURCHASE_CARD_PRICE } from '../data/constants';\nimport { Modal } from \"./shared/modal\";\nimport { Card, CardOption } from \"./shared/card\";\nimport { GameContext } from './app';\n\nconst Container = styled.div`\n`;\n\nexport const Shop = () => {\n  const [purchaseCardModal, setPurchaseCardModal] = useState();\n  const { state, dispatch } = useContext(GameContext);\n\n  const purchaseCard = () => {\n    setPurchaseCardModal(generateRandomUpgrades({ count: 3 }));\n  };\n\n  return (\n    <Container>\n      <h1>Shop</h1>\n      Current Gold: {state.money}\n      <br />\n      Current Deck: \n      <div style={{ display: 'flex'}}>\n        {state.targets.map(({ tier }, i) => (\n          <Card tier={tier} key={i + tier} />\n        ))}\n      </div>\n      <button onClick={purchaseCard}>Purchase Card</button>\n      <button disabled={state.money < PURCHASE_CARD_PRICE}>Remove Card (200 gold)</button>\n      <br />\n      <button onClick={() => dispatch({ type: 'startNextRound' })}>Next Level</button>\n      <PurchaseCardModal options={purchaseCardModal} close={() => setPurchaseCardModal()} />\n    </Container>\n  );\n}\n\nconst PurchaseCardModal = ({ options, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n  const [selected, setSelected] = useState(0);\n\n  const collect = () => {\n    dispatch({ type: 'upgrade', payload: { upgrades: [options[selected]] }})\n    close();\n  }\n\n  return (\n    options ? <Modal close={() => {}}>\n      <h1>Choose Your Card</h1>\n      {options.map((name, i) => {\n        const level = state.upgrades[name];\n        return (\n          <CardOption\n            key={i}\n            title={'Level ' + level}\n            description={getUpgradeDescription({ level, name })}\n            onClick={() => setSelected(i)}\n            selected={selected === i}\n          />\n        )\n      })}\n      <button onClick={collect}>Collect</button>\n    </Modal> : <></>\n  );\n}\n\n","const initialState = {\n  sensitivity: 0.4,\n  targetSize: 8,\n}\n\n// Key can be sensitivity, targetSize, etc.\nexport const save = (key, value) => localStorage.setItem(key, value);\nexport const fetch = (key) => localStorage.getItem(key) || initialState[key];\nexport const fetchInt = (key) => parseInt(localStorage.getItem(key) || initialState[key]);","import { useEffect, useContext } from 'react';\n\nimport { Modal } from \"./shared/modal\";\nimport { GameContext } from './app';\n\nimport { save } from '../utils/localStorage';\n\nexport const SettingsModal = ({ isOpen, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n\n  useEffect(() => {\n    const { sensitivity, targetSize } = state;\n    if (sensitivity) {\n      save('sensitivity', sensitivity);\n    }\n    if (targetSize) {\n      save('targetSize', targetSize);\n    }\n  }, [state.sensitivity, state.targetSize]);\n\n  return (\n    isOpen ? <Modal close={close}>\n      <h1>Settings</h1>\n      <div>\n        Sensitivity: &nbsp;\n        <input \n          type=\"number\"\n          step=\"0.01\"\n          value={state.sensitivity} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { sensitivity: event.target.value } })\n          }\n        />\n      </div>\n      <div>\n        Target Size (in px): &nbsp;\n        <input \n          type=\"number\"\n          step=\"1\"\n          value={state.targetSize} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { targetSize: event.target.value } })\n          }\n        />\n      </div>\n      <br />\n      <button onClick={close}>Save</button>\n    </Modal> : <></>\n  );\n}","import { useReducer } from 'react';\n\nimport { fetch, fetchInt } from '../utils/localStorage';\nimport { STARTING_DECK, INITIAL_UPGRADES } from '../data/targets';\nimport { ROUND_TIME, INITIAL_GOAL_SCORE } from '../data/constants';\n\nconst initialState = {\n  status: 'INITIAL',\n  sensitivity: fetch('sensitivity'),\n  targetSize: fetchInt('targetSize'),\n};\n\nconst INITIAL_GAME_STATE = {\n  timer: ROUND_TIME,\n  currentScore: 0,\n  goalScore: INITIAL_GOAL_SCORE,\n  level: 1,\n  money: 0,\n  targets: STARTING_DECK,\n  upgrades: INITIAL_UPGRADES,\n}\n\nconst bumpLevel = (state) => ({\n  ...state,\n  money: state.money + state.currentScore,\n  currentScore: 0,\n  level: state.level + 1,\n  goalScore: Math.ceil(state.goalScore * 1.2),\n  status: 'SHOP',\n});\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'changeSettings': {\n      return {\n        ...state,\n        sensitivity: action.payload.sensitivity || state.sensitivity,\n        targetSize: action.payload.targetSize || state.targetSize,\n      }\n    }\n    case 'returnToHomeScreen': {\n      return {\n        status: 'INITIAL',\n      }\n    }\n    case 'startGame':\n      return {\n        ...state,\n        status: 'RUNNING',\n        ...INITIAL_GAME_STATE,\n      }\n    // In-game actions\n    case 'hitTarget':\n      const newScore = state.currentScore + action.payload.inc;\n      if (newScore >= state.goalScore) {\n        // Complete round\n        return bumpLevel(state);\n      }\n      return {\n        ...state,\n        currentScore: newScore,\n      }\n    case 'endRound':\n      if (state.currentScore >= state.goalScore) {\n        return bumpLevel(state);\n      }\n      return {\n        ...state,\n        status: 'COMPLETED',\n      }\n    case 'upgrade':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to purchase')\n      }\n      const upgrades = Object.assign({}, state.upgrades);\n      action.payload.upgrades.forEach(upgrade => upgrades[upgrade]++);\n      return {\n        ...state,\n        upgrades,\n      }\n    case 'startNextRound':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to begin next round')\n      }\n      return {\n        ...state,\n        status: 'RUNNING',\n        timer: ROUND_TIME,\n      }\n    default:\n      throw new Error('Action not recognized - ' + action.type)\n  }\n}\n\nexport const useGameReducer = () => useReducer(reducer, initialState);","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Game from './game';\nimport { Shop } from './shop';\nimport { SettingsModal } from './settings';\n\nimport { useGameReducer } from '../hooks/game';\n\nconst Container = styled.div`\n`;\n\nexport const GameContext = React.createContext();\n\nconst App = () => {\n  const [state, dispatch] = useGameReducer();\n  const [settings, setSettings] = useState(false);\n\n  const startGame = () => {\n    dispatch({ type: 'startGame' });\n  }\n  const returnHome = () => {\n    dispatch({ type: 'returnToHomeScreen' });\n  }\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      <Container>\n        {state.status === 'INITIAL' &&\n          <>\n            <button onClick={startGame}>Start Game</button>\n            <button onClick={() => setSettings(true)}>Settings</button>\n            <SettingsModal isOpen={settings} close={() => setSettings(false)} />\n          </>\n        }\n        {state.status === 'RUNNING' && <Game />}\n        {state.status === 'SHOP' && <Shop />}\n        {state.status === 'COMPLETED' && \n          <>\n            <h1>Game Over</h1>\n            Score Reached: {state.currentScore}\n            Goal Score: {state.goalScore}\n            <button onClick={startGame}>Play Again</button>\n            <button onClick={returnHome}>Return Home</button>\n          </>}\n      </Container>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}