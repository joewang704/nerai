{"version":3,"sources":["utils.js","data/targets.js","components/game_info.js","components/game.js","data/constants.js","components/shared/modal.js","components/shared/button.js","components/shared/util.js","components/shared/card.js","components/shop.js","utils/localStorage.js","components/settings.js","hooks/game.js","components/app.js","reportWebVitals.js","index.js"],"names":["random","min","max","Math","ceil","floor","rollProbability","percent","degToRad","degrees","PI","useStableCB","callback","values","self","useRef","handler","_len","arguments","length","args","Array","_key","current","TIERS","generateRandomTarget","level","probs","base","l","startingIdx","total","t","rest","generateProbs","rng","bound","chosenTier","tier","effects","UPGRADE_INFO","baseTargets","description","maxLevel","extraSpawnOnHit","multiNextHit","multiOnConsecutiveHit","UPGRADES","Object","keys","INITIAL_UPGRADES","reduce","acc","value","getUpgradeDescription","_ref2","name","Container","styled","div","Left","Right","Center","GameInfo","_ref","timeRemaining","state","useContext","GameContext","upgradeDescriptions","entries","upgrades","filter","_","map","_ref3","join","_jsxs","children","currentScore","goalScore","_jsx","Game","dispatch","canvasRef","canvas","setCanvas","useState","ctx","setCtx","timeRemainingRef","timeRemainingRender","setTimeRemainingRender","cursorRef","x","y","targetsRef","numbersRef","stateRef","useEffect","getContext","width","window","innerWidth","height","innerHeight","requestPointerLock","unadjustedMovement","pointerLockChange","lockChangeAlert","onClick","handleClick","document","addEventListener","removeEventListener","exitPointerLock","d3","tickAnimation","stop","pointerLockElement","screenX","screenY","hitTarget","newTargets","radius","target","targetMissed","sqrt","pow","multiNextClick","push","createNewTarget","type","payload","inc","text","style","setTimeout","targetSize","drawCanvas","timerSec","fillStyle","fillRect","forEach","beginPath","arc","fill","closePath","drawTargets","font","numbersToShow","_ref4","fillText","drawNumbers","timeElapsed","_ref5","numTargets","i","spawnTarget","timer","toFixed","mozPointerLockElement","mouseMoveMemo","e","_ref6","dx","movementX","sensitivity","dy","movementY","ref","Background","Modal","close","_Fragment","createPortal","body","colorMap","red","green","pink","DEFAULT_COLOR","button","btnColor","background","Button","props","class","Centered","OptionContainer","CardOption","title","selected","borderColor","borderWidth","fontWeight","Shop","purchaseCardModal","setPurchaseCardModal","money","display","JSON","stringify","purchaseCard","count","choice","includes","generateRandomUpgrades","disabled","PurchaseCardModal","options","setSelected","collect","price","initialState","save","key","localStorage","setItem","SettingsModal","isOpen","step","onChange","event","status","getItem","parseInt","fetchInt","INITIAL_GAME_STATE","bumpLevel","reducer","action","newScore","newScoreState","Error","assign","upgrade","StartScreen","React","createContext","App","useReducer","settings","setSettings","startGame","Provider","returnHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9af94775.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nexport const random = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\n// Takes in percent chance as a decimal, rolls that percent chance\nexport const rollProbability = (percent) => {\n  return Math.random() < percent; // The maximum is exclusive and the minimum is inclusive\n}\n\nexport const degToRad = (degrees) => Math.PI / 180 * degrees;\n\nexport const useStableCB = (callback, values) => {\n  const self = useRef({\n    values: values,\n    handler: (...args) => {\n      return callback(...args, self.current.values)\n    }\n  });\n  self.current.values = values\n  return self.current.handler\n}","import { random } from \"../utils\"\n\nexport const TIERS = ['gray', 'green', 'blue', 'purple', 'gold']\n\nexport const generateTarget = (tier) => {\n  return {\n    tier,\n    effects: [],\n  }\n}\n\nconst generateProbs = (level) => {\n  const base = [90, 9, 1, 0, 0];\n\n  for (let l = 1; l <= level; l++) {\n    let startingIdx = 2;\n    if (l > 9) {\n      startingIdx = 4\n    } else if (l > 4) {\n      startingIdx = 3\n    }\n    let total = 0;\n    for (let t = startingIdx; t > 0; t--) {\n      base[t] += 1;\n      total += base[t];\n    }\n    const rest = 100 - total;\n    base[0] = rest;\n  }\n  return base;\n}\n\nexport const generateRandomTarget = (level) => {\n  const probs = generateProbs(level);\n\n  const rng = random(0, 101);\n\n  let bound = 0;\n  let chosenTier = 0;\n  for (let tier = 0; tier < probs.length; tier++) {\n    bound += probs[tier];\n    if (rng < bound) {\n      chosenTier = tier;\n      break;\n    }\n  }\n\n  return {\n    tier: chosenTier,\n    effects: [],\n  }\n}\n\nexport const UPGRADE_INFO = {\n  baseTargets: {\n    description: level => `Increases base number of targets by ${level}`,\n    maxLevel: 5,\n  },\n  extraSpawnOnHit: {\n    description: level => `${level * 5}% chance of extra target spawning on hit`,\n    maxLevel: 5,\n  },\n  multiNextHit: {\n    description: level => `${level * 5}% chance of spawning a target that will x2 points on next target`,\n    maxLevel: 5,\n  },\n  multiOnConsecutiveHit: {\n    description: level => 'Not implemented yet. Do not choose',\n    maxLevel: 5,\n  },\n}\nexport const UPGRADES = Object.keys(UPGRADE_INFO)\nexport const INITIAL_UPGRADES = UPGRADES.reduce((acc, value) => {\n  acc[value] = 0;\n  return acc;\n}, {})\n\nexport const generateRandomUpgrade = () => {\n  return UPGRADES[random(0, UPGRADES.length)];\n}\n\nexport const generateRandomUpgrades = ({ count }) => {\n  const upgrades = [];\n  while (upgrades.length < count) {\n    const choice = generateRandomUpgrade();\n    if (!upgrades.includes(choice)) {\n      upgrades.push(choice);\n    }\n  }\n  return upgrades;\n}\n\nexport const getUpgradeDescription = ({ level, name }) => {\n  return UPGRADE_INFO[name].description(level + 1);\n}","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { GameContext } from './app';\nimport { getUpgradeDescription } from '../data/targets';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 80px;\n  color: white;\n`;\n\nconst Left = styled.div`\n  float: left;\n`\n\nconst Right = styled.div`\n  float: right;\n`\n\nconst Center = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`\n\nconst GameInfo = ({ timeRemaining }) => {\n  const { state } = useContext(GameContext);\n\n  const upgradeDescriptions = Object.entries(state.upgrades)\n    .filter(([_, level]) => level > 0)\n    .map(([name, level]) => getUpgradeDescription({ name, level }))\n    .join(', ');\n\n  return (\n    <Container>\n      <Left>\n        <h1>Level {state.level}</h1>\n        <h1>Score: {state.currentScore} / {state.goalScore}</h1>\n      </Left>\n      <Right>\n        <p>Upgrades</p>\n        <p>{upgradeDescriptions}</p>\n      </Right>\n      <Center>\n        <h1>{timeRemaining}</h1>\n      </Center>\n    </Container>\n  );\n};\n\nexport default GameInfo;","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from 'd3-timer';\n\nimport { GameContext } from './app';\nimport GameInfo from './game_info';\nimport { degToRad, random, useStableCB, rollProbability } from '../utils';\nimport { TIERS, generateRandomTarget } from '../data/targets';\n\nconst RADIUS = 5;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Game = () => {\n  const { state, dispatch } = useContext(GameContext);\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  const timeRemainingRef = useRef();\n  const [timeRemainingRender, setTimeRemainingRender] = useState();\n  const cursorRef = useRef({ x: 500, y: 500 });\n  const targetsRef = useRef([]);\n  const numbersRef = useRef([]);\n  const stateRef = useRef(state);\n\n  useEffect(() => {\n    stateRef.current = state; \n  }, [state])\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    setCanvas(canvas);\n    const ctx = canvasRef.current.getContext('2d');\n    setCtx(ctx);\n    canvasRef.current.width = window.innerWidth;\n    canvasRef.current.height = window.innerHeight;\n    canvas.requestPointerLock({\n      unadjustedMovement: true,\n    });\n    const pointerLockChange = () => lockChangeAlert(canvas)\n    const onClick = () => handleClick()\n    document.addEventListener('pointerlockchange', pointerLockChange, false);\n    document.addEventListener('click', onClick);\n\n    return () => {\n      document.removeEventListener('pointerlockchange', pointerLockChange);\n      document.removeEventListener('click', onClick);\n      document.exitPointerLock();\n    };\n  }, [])\n\n  useEffect(() => {\n    let t;\n    if (canvas && ctx) {\n      t = d3.timer(tickAnimation)\n    }\n    return () => t && t.stop()\n  }, [canvas, ctx]);\n\n  const handleClick = () => {\n    if (!document.pointerLockElement) {\n      // Handle 100ms required delay to relock pointer\n      setTimeout(() => {\n        canvasRef.current.requestPointerLock({\n          unadjustedMovement: true,\n        });\n      }, 100);\n    } else {\n      const screenX = cursorRef.current.x;\n      const screenY = cursorRef.current.y;\n      const targets = targetsRef.current;\n      let hitTarget;\n      const newTargets = targets.filter(({ x, y, radius, target }) => {\n        // Filter out if target clicked inside\n        const targetMissed = Math.sqrt(Math.pow(x - screenX, 2) + Math.pow(y - screenY, 2)) >= (radius + RADIUS);\n        if (!targetMissed) {\n          hitTarget = target;\n        }\n        return targetMissed;\n      });\n\n      if (!hitTarget) {\n        // Player loses points on missing target\n        dispatch({ type: 'hitTarget', payload: { inc: -1 }})\n        numbersRef.current.push({\n          x: screenX,\n          y: screenY,\n          text: '-1',\n          style: 'red',\n          timeRemaining: timeRemainingRef.current - 0.3,\n        });\n      } else {\n        const { extraSpawnOnHit, multiNextClick } = state.upgrades;\n        if (extraSpawnOnHit > 0 && rollProbability(extraSpawnOnHit * 0.05)) {\n          newTargets.push(createNewTarget());\n          newTargets.push(createNewTarget());\n        } else if (multiNextClick > 0 && rollProbability(multiNextClick * 0.05)) {\n          // TODO: spawn multiplier target\n        }\n        dispatch({ type: 'hitTarget', payload: { inc: hitTarget.tier + 1 }})\n        // Don't show text on hit for now, too distracting\n        // numbersRef.current.push({\n        //   x: screenX,\n        //   y: screenY,\n        //   text: `+${hitTarget.tier + 1}`,\n        //   style: TIERS[hitTarget.tier],\n        //   timeRemaining: timeRemainingRef.current - 0.1,\n        // });\n        targetsRef.current = newTargets;\n      }\n    }\n  }\n\n  const createNewTarget = () => {\n    if (!canvasRef.current) {\n      // Return dummy target if target created while canvas does not exist (happens during race condition)\n      return { x: 0, y: 0, radius: 0, target: generateRandomTarget(0) };\n    }\n    const { targetSize, level } = state;\n    const { width, height } = canvasRef.current;\n    const x = random(width / 2 - width / 4, width - targetSize - width / 2);\n    const y = random(height / 2 - height / 4, height - targetSize - height / 2);\n    return { x, y, radius: targetSize, target: generateRandomTarget(level) };\n  }\n\n  const spawnTarget = (canvas) => {\n    const { baseTargets } = state.upgrades;\n    const numTargets = targetsRef.current.length;\n    if (numTargets <= baseTargets && canvas) {\n      for (let i = numTargets; i < baseTargets; i++) {\n        targetsRef.current.push(createNewTarget());\n      }\n      targetsRef.current.push(createNewTarget());\n    }\n  }\n\n  const drawTargets = (ctx) => {\n    targetsRef.current.forEach(({ x, y, radius, target }) => {\n      ctx.fillStyle = TIERS[target.tier];\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, degToRad(360), true);\n      ctx.fill();\n      ctx.closePath();\n    });\n  };\n\n  const drawNumbers = (ctx) => {\n    ctx.font = \"24px Arial\";\n    const numbersToShow = numbersRef.current.filter(({ timeRemaining }) => {\n      return timeRemaining < timeRemainingRef.current\n    });\n    numbersRef.current = numbersToShow;\n    numbersRef.current.forEach(({ x, y, text, style }) => {\n      ctx.fillStyle = style;\n      ctx.fillText(text, x, y)\n    });\n  };\n\n  const drawCanvas = (canvas, ctx, timerSec) => {\n    const { width, height } = canvas;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, width, height);\n\n    drawTargets(ctx);\n\n    drawNumbers(ctx, timerSec);\n\n    // Cursor\n    ctx.fillStyle = \"#f00\";\n    ctx.beginPath();\n    ctx.arc(cursorRef.current.x, cursorRef.current.y, RADIUS, 0, degToRad(360), true);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const tickAnimation = useStableCB((timeElapsed, [canvas, ctx]) => {\n    if (!canvas || !ctx) return;\n\n    spawnTarget(canvas);\n\n    // Handle timer state in game loop\n    const timeRemaining = state.timer - timeElapsed / 1000;\n    if (timeRemaining <= 0) {\n      return dispatch({ type: 'endRound' });\n    }\n    timeRemainingRef.current = timeRemaining;\n    setTimeRemainingRender(timeRemaining.toFixed(2));\n\n    drawCanvas(canvas, ctx, timeRemaining);\n\n  }, [canvas, ctx]);\n\n  const lockChangeAlert = (canvas) => {\n    if (document.pointerLockElement === canvas ||\n        document.mozPointerLockElement === canvas) {\n      canvas.addEventListener(\"mousemove\", mouseMoveMemo, false);\n    } else {\n      canvas.removeEventListener(\"mousemove\", mouseMoveMemo, false);\n    }\n  }\n\n  const mouseMoveMemo = useStableCB((e, [cursorRef, canvas]) => {\n    if (!canvas) return;\n    // Edge detection\n    const { x, y } = cursorRef.current;\n    if (x > canvas.width) {\n      cursorRef.current = { x: canvas.width - 1, y }\n      return\n    }\n    if (y > canvas.height) {\n      cursorRef.current = { x, y: canvas.height - 1 }\n      return\n    }  \n    if (x < 0) {\n      cursorRef.current = { x: 1, y }\n      return\n    }\n    if (y < 0) {\n      cursorRef.current = { x, y: 1 }\n      return\n    }\n    const dx = e.movementX * (state.sensitivity || 1);\n    const dy = e.movementY * (state.sensitivity || 1);\n    cursorRef.current = { x: x + dx, y: y + dy }\n  }, [cursorRef, canvas]);\n\n  return (\n    <Container>\n      <GameInfo timeRemaining={timeRemainingRender} />\n      <canvas ref={canvasRef}>\n      </canvas>\n    </Container>\n  );\n}\n\nexport default Game;\n","export const COLORS = {\n  darkYellow: '#F6BE00',\n  darkRed: '#8b0000',\n  metallicGray: '#A8A9AD',\n  omYellow: '#FACE26',\n  omOrange: '#FD871A',\n  omSand: '#F0E0BE',\n  // TODO: find better colors for HTML defaults\n  common: 'gray',\n  uncommon: 'green',\n  rare: 'blue',\n  epic: 'purple',\n  legendary: 'yellow',\n};\n\n// Test values\n// export const PURCHASE_CARD_PRICE = 1;\n// export const ROUND_TIME = 20;\n// export const INITIAL_GOAL_SCORE = 1;\n// export const COMPLETE_ROUND_ON_SCORE_HIT = true;\n\n// Real values\nexport const PURCHASE_CARD_PRICE = 30;\nexport const ROUND_TIME = 20;\nexport const INITIAL_GOAL_SCORE = 10;\nexport const COMPLETE_ROUND_ON_SCORE_HIT = false;","import { createPortal } from \"react-dom\";\nimport styled from '@emotion/styled';\n\nconst Background = styled.div`\n  background-color: black;\n  opacity: .4;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: white;\n  padding: 24px;\n  border-radius: 16px;\n  opacity: 1;\n`;\n\nexport const Modal = ({ children, close }) => {\n  return (\n    <>\n      {createPortal(\n        <>\n        <Container>\n          {children}\n        </Container>\n        <Background onClick={close}></Background>\n        </>, document.body)}\n    </>\n  )\n}","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst colorMap = {\n  red: ['hsl(340deg 100% 32%)', 'hsl(345deg 100% 47%)'],\n  green: ['hsl(107deg 100% 25%)', 'hsl(107deg 100% 35%)'],\n  pink: ['hsl(333deg 100% 70%)', 'hsl(333deg 100% 78%)'],\n};\nconst DEFAULT_COLOR = 'pink';\n\nconst Container = styled.button`\n  background: hsl(340deg 100% 32%);\n  ${({ btnColor }) => ({ background: colorMap[btnColor ?? DEFAULT_COLOR][0] })}\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n\n  .front {\n    display: block;\n    padding: 12px 42px;\n    border-radius: 12px;\n    font-size: 1.25rem;\n    ${({ btnColor }) => ({ background: colorMap[btnColor ?? DEFAULT_COLOR][1] })}\n    color: white;\n    transform: translateY(-6px);\n  }\n\n  &:disabled {\n    opacity: .4;\n    cursor: default;\n  }\n\n  &:hover {\n  &:hover:not(:disabled) {\n    filter: brightness(110%);\n  }\n  &:hover:not(:disabled) .front {\n    transform: translateY(-6px);\n    transition:\n      transform\n      250ms\n      cubic-bezier(.3, .7, .4, 1.5);\n  }\n  &:active:not(:disabled) .front {\n    transform: translateY(-2px);\n    transition: transform 34ms;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const Button = ({ children, ...props }) => (\n  <Container {...props}>\n    <span class=\"front\">\n      {children}\n    </span>\n  </Container>\n);\n","import styled from '@emotion/styled';\n\nexport const Centered = styled.div`\n  font-weight: 600;\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n`;","import styled from '@emotion/styled';\n\nimport { TIERS } from \"../../data/targets\";\n\nconst Container = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n`;\n\nexport const Card = ({ tier }) => {\n  return (\n    <Container style={{ borderColor: TIERS[tier] }}>\n      N/A\n    </Container>\n  )\n}\n\nconst OptionContainer = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  cursor: pointer;\n  hover {\n    opacity: .6;\n  }\n`;\n\nexport const CardOption = ({ title, description, onClick, selected }) => {\n  return (\n    <OptionContainer style={{ borderColor: '#eee', borderWidth: selected ? '5px' : '3px', fontWeight: selected ? 'bold' : 'normal' }} onClick={onClick}>\n      {title}<br />\n      {description}\n    </OptionContainer>\n  )\n}","import React, { useState, useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { generateRandomUpgrades, getUpgradeDescription, UPGRADES } from '../data/targets';\nimport { PURCHASE_CARD_PRICE } from '../data/constants';\nimport { Modal } from \"./shared/modal\";\nimport { Button } from \"./shared/button\";\nimport { Centered } from \"./shared/util\";\nimport { Card, CardOption } from \"./shared/card\";\nimport { GameContext } from './app';\n\nconst Container = styled(Centered)`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const Shop = () => {\n  const [purchaseCardModal, setPurchaseCardModal] = useState();\n  const { state, dispatch } = useContext(GameContext);\n\n  const purchaseCard = () => {\n    setPurchaseCardModal(generateRandomUpgrades({ count: 3 }));\n  };\n\n  return (\n    <Container>\n      <h1>Shop</h1>\n      Current Gold: {state.money}\n      <br />\n      Current Upgrades: \n      <div style={{ display: 'flex'}}>\n        {JSON.stringify(state.upgrades)}\n      </div>\n      <br /><br />\n      <Button onClick={purchaseCard} disabled={state.money < PURCHASE_CARD_PRICE}>Purchase Upgrade ({PURCHASE_CARD_PRICE} gold)</Button>\n      <br />\n      <Button onClick={() => dispatch({ type: 'startNextRound' })}>Next Level</Button>\n      <PurchaseCardModal options={purchaseCardModal} close={() => setPurchaseCardModal()} />\n    </Container>\n  );\n}\n\nconst PurchaseCardModal = ({ options, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n  const [selected, setSelected] = useState(0);\n\n  const collect = () => {\n    dispatch({ type: 'upgrade', payload: { upgrades: [options[selected]], price: PURCHASE_CARD_PRICE }})\n    close();\n  }\n\n  return (\n    options ? <Modal close={() => {}}>\n      <h1>Choose Your Card</h1>\n      {options.map((name, i) => {\n        const level = state.upgrades[name];\n        return (\n          <CardOption\n            key={i}\n            title={'Level ' + level}\n            description={getUpgradeDescription({ level, name })}\n            onClick={() => setSelected(i)}\n            selected={selected === i}\n          />\n        )\n      })}\n      <button onClick={collect}>Collect</button>\n    </Modal> : <></>\n  );\n}\n\n","const initialState = {\n  sensitivity: 0.4,\n  targetSize: 8,\n}\n\n// Key can be sensitivity, targetSize, etc.\nexport const save = (key, value) => localStorage.setItem(key, value);\nexport const fetch = (key) => localStorage.getItem(key) || initialState[key];\nexport const fetchInt = (key) => parseInt(localStorage.getItem(key) || initialState[key]);","import { useEffect, useContext } from 'react';\n\nimport { Modal } from \"./shared/modal\";\nimport { Button } from \"./shared/button\";\nimport { GameContext } from './app';\n\nimport { save } from '../utils/localStorage';\n\nexport const SettingsModal = ({ isOpen, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n\n  useEffect(() => {\n    const { sensitivity, targetSize } = state;\n    if (sensitivity) {\n      save('sensitivity', sensitivity);\n    }\n    if (targetSize) {\n      save('targetSize', targetSize);\n    }\n  }, [state.sensitivity, state.targetSize]);\n\n  return (\n    isOpen ? <Modal close={close}>\n      <h1>Settings</h1>\n      <div>\n        Sensitivity: &nbsp;\n        <input \n          type=\"number\"\n          step=\"0.01\"\n          value={state.sensitivity} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { sensitivity: event.target.value } })\n          }\n        />\n      </div>\n      <div>\n        Target Size (in px): &nbsp;\n        <input \n          type=\"number\"\n          step=\"1\"\n          value={state.targetSize} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { targetSize: event.target.value } })\n          }\n        />\n      </div>\n      <br />\n      <Button onClick={close}>Save</Button>\n    </Modal> : <></>\n  );\n}","import { useReducer } from 'react';\n\nimport { fetch, fetchInt } from '../utils/localStorage';\nimport { INITIAL_UPGRADES } from '../data/targets';\nimport { ROUND_TIME, INITIAL_GOAL_SCORE, COMPLETE_ROUND_ON_SCORE_HIT } from '../data/constants';\n\nconst initialState = {\n  status: 'INITIAL',\n  sensitivity: fetch('sensitivity'),\n  targetSize: fetchInt('targetSize'),\n};\n\nconst INITIAL_GAME_STATE = {\n  timer: ROUND_TIME,\n  currentScore: 0,\n  goalScore: INITIAL_GOAL_SCORE,\n  level: 1,\n  money: 0,\n  upgrades: INITIAL_UPGRADES,\n}\n\nconst bumpLevel = (state) => ({\n  ...state,\n  money: state.money + state.currentScore,\n  currentScore: 0,\n  level: state.level + 1,\n  goalScore: Math.ceil(state.goalScore * 1.2),\n  status: 'SHOP',\n});\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'changeSettings': {\n      return {\n        ...state,\n        sensitivity: action.payload.sensitivity || state.sensitivity,\n        targetSize: action.payload.targetSize || state.targetSize,\n      }\n    }\n    case 'returnToHomeScreen': {\n      return {\n        status: 'INITIAL',\n      }\n    }\n    case 'startGame':\n      return {\n        ...state,\n        status: 'RUNNING',\n        ...INITIAL_GAME_STATE,\n      }\n    // In-game actions\n    case 'hitTarget':\n      const newScore = state.currentScore + action.payload.inc;\n      const newScoreState = {\n        ...state,\n        currentScore: newScore,\n      };\n      if (newScore >= state.goalScore && COMPLETE_ROUND_ON_SCORE_HIT) {\n        // Complete round\n        return bumpLevel(newScoreState);\n      }\n      return newScoreState;\n    case 'endRound':\n      if (state.currentScore >= state.goalScore) {\n        return bumpLevel(state);\n      }\n      return {\n        ...state,\n        status: 'COMPLETED',\n      }\n    case 'upgrade':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to purchase')\n      }\n      const upgrades = Object.assign({}, state.upgrades);\n      action.payload.upgrades.forEach(upgrade => upgrades[upgrade]++);\n      return {\n        ...state,\n        money: state.money - action.payload.price,\n        upgrades,\n      }\n    case 'startNextRound':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to begin next round')\n      }\n      return {\n        ...state,\n        status: 'RUNNING',\n        timer: ROUND_TIME,\n      }\n    default:\n      throw new Error('Action not recognized - ' + action.type)\n  }\n}\n\nexport const useGameReducer = () => useReducer(reducer, initialState);","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Game from './game';\nimport { Shop } from './shop';\nimport { SettingsModal } from './settings';\nimport { Button } from './shared/button';\nimport { Centered } from './shared/util';\n\nimport { useGameReducer } from '../hooks/game';\n\nconst Container = styled.div`\n  color: white;\n`;\n\nconst StartScreen = styled(Centered)`\n  font-weight: 600;\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  button {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const GameContext = React.createContext();\n\nconst App = () => {\n  const [state, dispatch] = useGameReducer();\n  const [settings, setSettings] = useState(false);\n\n  const startGame = () => {\n    dispatch({ type: 'startGame' });\n  }\n  const returnHome = () => {\n    dispatch({ type: 'returnToHomeScreen' });\n  }\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      <Container>\n        {state.status === 'INITIAL' &&\n          <StartScreen>\n            <Button onClick={startGame}>Start Game</Button>\n            <Button onClick={() => setSettings(true)}>Settings</Button>\n            <SettingsModal isOpen={settings} close={() => setSettings(false)} />\n          </StartScreen>\n        }\n        {state.status === 'RUNNING' && <Game />}\n        {state.status === 'SHOP' && <Shop />}\n        {state.status === 'COMPLETED' && \n          <StartScreen>\n            <h1>Game Over</h1>\n            <p>Level Reached: {state.level}</p>\n            <p>Score Reached: {state.currentScore}</p>\n            <p>Goal Score: {state.goalScore}</p>\n            <Button onClick={startGame}>Play Again</Button>\n            <Button onClick={returnHome}>Return Home</Button>\n          </StartScreen>}\n      </Container>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}