{"version":3,"sources":["components/game_info.js","utils.js","data/targets.js","components/game.js","data/constants.js","components/shared/modal.js","components/shared/card.js","components/shop.js","utils/localStorage.js","components/settings.js","hooks/game.js","components/app.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","GameInfo","_ref","timeRemaining","state","useContext","GameContext","_jsxs","children","level","currentScore","goalScore","random","min","max","Math","ceil","floor","degToRad","degrees","PI","useStableCB","callback","values","self","useRef","handler","_len","arguments","length","args","Array","_key","current","TIERS","generateTarget","tier","effects","generateRandomTarget","probs","base","l","startingIdx","total","t","rest","generateProbs","rng","bound","chosenTier","STARTING_DECK","Game","dispatch","canvasRef","canvas","setCanvas","useState","ctx","setCtx","setTimeRemaining","cursorRef","x","y","targetsRef","stateRef","useEffect","getContext","width","window","innerWidth","height","innerHeight","requestPointerLock","unadjustedMovement","pointerLockChange","lockChangeAlert","document","addEventListener","handleClick","removeEventListener","exitPointerLock","d3","tickAnimation","stop","pointerLockElement","screenX","screenY","targets","newTargets","filter","radius","sqrt","pow","type","payload","inc","setTimeout","drawCanvas","fillStyle","fillRect","forEach","_ref2","target","beginPath","arc","fill","closePath","drawTargets","timeElapsed","_ref3","targetSize","spawnTarget","timerSec","timer","toFixed","mozPointerLockElement","mouseMoveMemo","e","_ref4","dx","movementX","sensitivity","dy","movementY","_jsx","ref","Background","Modal","close","_Fragment","createPortal","onClick","body","Card","style","borderColor","OptionContainer","CardOption","selected","color","borderWidth","fontWeight","Shop","purchaseCardModal","setPurchaseCardModal","money","display","map","purchaseCard","disabled","PurchaseCardModal","options","setSelected","i","collect","spent","initialState","save","key","value","localStorage","setItem","fetch","getItem","SettingsModal","isOpen","step","onChange","event","status","INITIAL_GAME_STATE","reducer","action","bumpLevel","Error","React","createContext","App","useReducer","settings","setSettings","startGame","Provider","returnHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84c1addd.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { GameContext } from './app';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 80px;\n  background-color: #333;\n  color: white;\n  padding: 12px 24px 24px;\n  display: flex;\n  h1 {\n    margin-right: 48px;\n  }\n`;\n\nconst GameInfo = ({ timeRemaining }) => {\n  const { state } = useContext(GameContext);\n\n  return (\n    <Container>\n      <h1>Level {state.level}</h1>\n      <h1>Current Score: {state.currentScore} / {state.goalScore}</h1>\n      <h1>Time Left: {timeRemaining}</h1>\n    </Container>\n  );\n};\n\nexport default GameInfo;","import { useRef } from 'react';\n\nexport const random = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\nexport const degToRad = (degrees) => Math.PI / 180 * degrees;\n\nexport const useStableCB = (callback, values) => {\n  const self = useRef({\n    values: values,\n    handler: (...args) => {\n      return callback(...args, self.current.values)\n    }\n  });\n  self.current.values = values\n  return self.current.handler\n}","import { random } from \"../utils\"\n\nexport const TIERS = ['gray', 'green', 'blue', 'purple', 'gold']\n\nexport const generateTarget = (tier) => {\n  return {\n    tier,\n    effects: [],\n  }\n}\n\nconst generateProbs = (level) => {\n  const base = [50, 49, 1, 0, 0];\n\n  for (let l = 1; l <= level; l++) {\n    let startingIdx = 2;\n    if (l > 9) {\n      startingIdx = 4\n    } else if (l > 4) {\n      startingIdx = 3\n    }\n    let total = 0;\n    for (let t = startingIdx; t > 0; t--) {\n      base[t] = level++;\n      total += base[t];\n    }\n    const rest = 100 - total;\n    base[0] = rest;\n  }\n  return base;\n}\n\nexport const generateRandomTarget = (level) => {\n  const probs = generateProbs(level);\n\n  const rng = random(0, 101);\n\n  let bound = 0;\n  let chosenTier = 0;\n  for (let tier = 0; tier < probs.length; tier++) {\n    bound += probs[tier];\n    if (rng < bound) {\n      chosenTier = tier;\n      break;\n    }\n  }\n\n  return {\n    tier: chosenTier,\n    effects: [],\n  }\n}\n\nexport const STARTING_DECK = [\n  generateTarget(0),\n  generateTarget(0),\n  generateTarget(0),\n]","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from 'd3-timer';\n\nimport { GameContext } from './app';\nimport GameInfo from './game_info';\nimport { degToRad, random, useStableCB } from '../utils';\nimport { TIERS } from '../data/targets';\n\nconst RADIUS = 5;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Game = () => {\n  const { state, dispatch } = useContext(GameContext);\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  const [timeRemaining, setTimeRemaining] = useState();\n  const cursorRef = useRef({ x: 500, y: 500 });\n  const targetsRef = useRef([]);\n  const stateRef = useRef(state);\n\n  useEffect(() => {\n    stateRef.current = state; \n  }, [state])\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    setCanvas(canvas);\n    const ctx = canvasRef.current.getContext('2d');\n    setCtx(ctx);\n    canvasRef.current.width = window.innerWidth;\n    canvasRef.current.height = window.innerHeight;\n    canvas.requestPointerLock({\n      unadjustedMovement: true,\n    });\n    const pointerLockChange = () => lockChangeAlert(canvas)\n    document.addEventListener('pointerlockchange', pointerLockChange, false);\n    document.addEventListener('click', handleClick);\n\n    return () => {\n      document.removeEventListener('pointerlockchange', pointerLockChange);\n      document.removeEventListener('click', handleClick);\n      document.exitPointerLock();\n    };\n  }, [])\n\n  useEffect(() => {\n    let t;\n    if (canvas && ctx) {\n      t = d3.timer(tickAnimation)\n    }\n    return () => t && t.stop()\n  }, [canvas, ctx]);\n\n  const handleClick = () => {\n    if (!document.pointerLockElement) {\n      // Handle 100ms required delay to relock pointer\n      setTimeout(() => {\n        canvasRef.current.requestPointerLock({\n          unadjustedMovement: true,\n        });\n      }, 100);\n    } else {\n      const screenX = cursorRef.current.x;\n      const screenY = cursorRef.current.y;\n      const targets = targetsRef.current;\n      const newTargets = targets.filter(({ x, y, radius }) =>\n        // Filter out if target clicked inside\n        Math.sqrt(Math.pow(x - screenX, 2), Math.pow(y - screenY, 2)) >= radius + RADIUS);\n\n      if (newTargets.length === targets.length) {\n        // Player loses points on missing target\n        dispatch({ type: 'hitTarget', payload: { inc: -1 }})\n      } else {\n        dispatch({ type: 'hitTarget', payload: { inc: 1 }})\n      }\n      targetsRef.current = newTargets;\n    }\n  }\n\n  const spawnTarget = (canvas) => {\n    if (!targetsRef.current.length && canvas) {\n      const { targetSize, targets } = state;\n      const { width, height } = canvas;\n      const x = random(width / 2 - width / 4, width - targetSize - width / 2);\n      const y = random(height / 2 - height / 4, height - targetSize - height / 2);\n      \n      const target = targets[random(0, targets.length)];\n\n      targetsRef.current = [{ x, y, radius: targetSize, target }];\n    }\n  }\n\n  const drawTargets = (ctx) => {\n    targetsRef.current.forEach(({ x, y, radius, target }) => {\n      ctx.fillStyle = TIERS[target.tier];\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, degToRad(360), true);\n      ctx.fill();\n      ctx.closePath();\n    });\n  };\n\n  const drawCanvas = (canvas, ctx) => {\n    const { width, height } = canvas;\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, width, height);\n\n    drawTargets(ctx);\n\n    // Cursor\n    ctx.fillStyle = \"#f00\";\n    ctx.beginPath();\n    ctx.arc(cursorRef.current.x, cursorRef.current.y, RADIUS, 0, degToRad(360), true);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const tickAnimation = useStableCB((timeElapsed, [canvas, ctx]) => {\n    if (!canvas || !ctx) return;\n\n    spawnTarget(canvas);\n    drawCanvas(canvas, ctx);\n\n    // Handle timer state in game loop\n    const timerSec = (state.timer - timeElapsed / 1000).toFixed(2);\n    if (timerSec <= 0) {\n      return dispatch({ type: 'endRound' });\n    }\n    setTimeRemaining(timerSec);\n\n  }, [canvas, ctx]);\n\n  const lockChangeAlert = (canvas) => {\n    if (document.pointerLockElement === canvas ||\n        document.mozPointerLockElement === canvas) {\n      canvas.addEventListener(\"mousemove\", mouseMoveMemo, false);\n    } else {\n      canvas.removeEventListener(\"mousemove\", mouseMoveMemo, false);\n    }\n  }\n\n  const mouseMoveMemo = useStableCB((e, [cursorRef, canvas]) => {\n    if (!canvas) return;\n    // Edge detection\n    const { x, y } = cursorRef.current;\n    if (x > canvas.width) {\n      cursorRef.current = { x: canvas.width - 1, y }\n      return\n    }\n    if (y > canvas.height) {\n      cursorRef.current = { x, y: canvas.height - 1 }\n      return\n    }  \n    if (x < 0) {\n      cursorRef.current = { x: 1, y }\n      return\n    }\n    if (y < 0) {\n      cursorRef.current = { x, y: 1 }\n      return\n    }\n    const dx = e.movementX * (state.sensitivity || 1);\n    const dy = e.movementY * (state.sensitivity || 1);\n    cursorRef.current = { x: x + dx, y: y + dy }\n  }, [cursorRef, canvas]);\n\n  return (\n    <Container>\n      <GameInfo timeRemaining={timeRemaining} />\n      <canvas ref={canvasRef}>\n      </canvas>\n    </Container>\n  );\n}\n\nexport default Game;\n","export const COLORS = {\n  darkYellow: '#F6BE00',\n  darkRed: '#8b0000',\n  metallicGray: '#A8A9AD',\n  omYellow: '#FACE26',\n  omOrange: '#FD871A',\n  omSand: '#F0E0BE',\n  // TODO: find better colors for HTML defaults\n  common: 'gray',\n  uncommon: 'green',\n  rare: 'blue',\n  epic: 'purple',\n  legendary: 'yellow',\n};\n\n// Testing values\n// export const PURCHASE_CARD_PRICE = 5;\n// export const ROUND_TIME = 5;\n// export const INITIAL_GOAL_SCORE = 1;\n\n// Real values\nexport const PURCHASE_CARD_PRICE = 30;\nexport const ROUND_TIME = 30;\nexport const INITIAL_GOAL_SCORE = ROUND_TIME;","import { createPortal } from \"react-dom\";\nimport styled from '@emotion/styled';\n\nconst Background = styled.div`\n  background-color: black;\n  opacity: .4;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: white;\n  padding: 24px;\n  border-radius: 4px;\n  opacity: 1;\n`;\n\nexport const Modal = ({ children, close }) => {\n  return (\n    <>\n      {createPortal(\n        <>\n        <Container>\n          {children}\n        </Container>\n        <Background onClick={close}></Background>\n        </>, document.body)}\n    </>\n  )\n}","import styled from '@emotion/styled';\n\nimport { TIERS } from \"../../data/targets\";\n\nconst Container = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n`;\n\nexport const Card = ({ tier }) => {\n  return (\n    <Container style={{ borderColor: TIERS[tier] }}>\n      N/A\n    </Container>\n  )\n}\n\nconst OptionContainer = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  cursor: pointer;\n  hover {\n    opacity: .6;\n  }\n`;\n\nexport const CardOption = ({ tier, onClick, selected }) => {\n  const color = TIERS[tier];\n  return (\n    <OptionContainer style={{ borderColor: color, borderWidth: selected ? '5px' : '3px', fontWeight: selected ? 'bold' : 'normal' }} onClick={onClick}>\n      Effect: None\n    </OptionContainer>\n  )\n}","import React, { useState, useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { generateRandomTarget } from '../data/targets';\nimport { PURCHASE_CARD_PRICE } from '../data/constants';\nimport { Modal } from \"./shared/modal\";\nimport { Card, CardOption } from \"./shared/card\";\nimport { GameContext } from './app';\n\nconst Container = styled.div`\n`;\n\nexport const Shop = () => {\n  const [purchaseCardModal, setPurchaseCardModal] = useState();\n  const { state, dispatch } = useContext(GameContext);\n\n  const purchaseCard = () => {\n    setPurchaseCardModal([generateRandomTarget(), generateRandomTarget(), generateRandomTarget()]);\n  };\n\n  return (\n    <Container>\n      <h1>Shop</h1>\n      Current Gold: {state.money}\n      <br />\n      Current Deck: \n      <div style={{ display: 'flex'}}>\n        {state.targets.map(({ tier }) => (\n          <Card tier={tier} />\n        ))}\n      </div>\n      <button onClick={purchaseCard} disabled={state.money < PURCHASE_CARD_PRICE}>Purchase Card ({PURCHASE_CARD_PRICE} gold)</button>\n      <button disabled={state.money < PURCHASE_CARD_PRICE}>Remove Card (200 gold)</button>\n      <br />\n      <button onClick={() => dispatch({ type: 'startNextRound' })}>Next Level</button>\n      <PurchaseCardModal options={purchaseCardModal} close={() => setPurchaseCardModal()} />\n    </Container>\n  );\n}\n\nconst PurchaseCardModal = ({ options, close }) => {\n  const { dispatch } = useContext(GameContext);\n  const [selected, setSelected] = useState(0);\n\n  const collect = () => {\n    dispatch({ type: 'addTargets', payload: { targets: [options[selected]], spent: PURCHASE_CARD_PRICE }})\n    close();\n  }\n\n  return (\n    options ? <Modal close={() => {}}>\n      <h1>Choose Your Card</h1>\n      {options.map(({ tier }, i) => (\n        <CardOption tier={tier} onClick={() => setSelected(i)} selected={selected === i} />\n      ))}\n      <button onClick={collect}>Collect</button>\n    </Modal> : <></>\n  );\n}\n\n","const initialState = {\n  sensitivity: 0.4,\n  targetSize: 8,\n}\n\n// Key can be sensitivity, targetSize, etc.\nexport const save = (key, value) => localStorage.setItem(key, value);\nexport const fetch = (key) => localStorage.getItem(key) || initialState[key];","import { useEffect, useContext } from 'react';\n\nimport { Modal } from \"./shared/modal\";\nimport { GameContext } from './app';\n\nimport { save } from '../utils/localStorage';\n\nexport const SettingsModal = ({ isOpen, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n\n  useEffect(() => {\n    const { sensitivity, targetSize } = state;\n    if (sensitivity) {\n      save('sensitivity', sensitivity);\n    }\n    if (targetSize) {\n      save('targetSize', targetSize);\n    }\n  }, [state.sensitivity, state.targetSize]);\n\n  return (\n    isOpen ? <Modal close={close}>\n      <h1>Settings</h1>\n      <div>\n        Sensitivity: &nbsp;\n        <input \n          type=\"number\"\n          step=\"0.01\"\n          value={state.sensitivity} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { sensitivity: event.target.value } })\n          }\n        />\n      </div>\n      <div>\n        Target Size (in px): &nbsp;\n        <input \n          type=\"number\"\n          step=\"1\"\n          value={state.targetSize} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { targetSize: event.target.value } })\n          }\n        />\n      </div>\n      <br />\n      <button onClick={close}>Save</button>\n    </Modal> : <></>\n  );\n}","import { useReducer } from 'react';\n\nimport { fetch } from '../utils/localStorage';\nimport { STARTING_DECK } from '../data/targets';\nimport { ROUND_TIME, INITIAL_GOAL_SCORE } from '../data/constants';\n\nconst initialState = {\n  status: 'INITIAL',\n  sensitivity: fetch('sensitivity'),\n  targetSize: fetch('targetSize'),\n};\n\nconst INITIAL_GAME_STATE = {\n  timer: ROUND_TIME,\n  currentScore: 0,\n  goalScore: INITIAL_GOAL_SCORE,\n  level: 1,\n  money: 0,\n  targets: STARTING_DECK,\n}\n\nconst bumpLevel = (state) => ({\n  ...state,\n  money: state.money + state.currentScore,\n  currentScore: 0,\n  level: state.level + 1,\n  goalScore: Math.ceil(state.goalScore * 1.5),\n  status: 'SHOP',\n});\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'changeSettings': {\n      return {\n        ...state,\n        sensitivity: action.payload.sensitivity || state.sensitivity,\n        targetSize: action.payload.targetSize || state.targetSize,\n      }\n    }\n    case 'returnToHomeScreen': {\n      return {\n        status: 'INITIAL',\n      }\n    }\n    case 'startGame':\n      return {\n        ...state,\n        status: 'RUNNING',\n        ...INITIAL_GAME_STATE,\n      }\n    // In-game actions\n    case 'hitTarget':\n      return {\n        ...state,\n        currentScore: state.currentScore + action.payload.inc,\n      }\n    case 'endRound':\n      if (state.currentScore >= state.goalScore) {\n        return bumpLevel(state);\n      }\n      return {\n        ...state,\n        status: 'COMPLETED',\n      }\n    case 'addTargets':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to purchase')\n      }\n      return {\n        ...state,\n        money: state.money - action.payload.spent,\n        targets: [...state.targets, ...action.payload.targets],\n      }\n    case 'startNextRound':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to begin next round')\n      }\n      return {\n        ...state,\n        status: 'RUNNING',\n        timer: ROUND_TIME,\n      }\n    default:\n      throw new Error('Action not recognized - ' + action.type)\n  }\n}\n\nexport const useGameReducer = () => useReducer(reducer, initialState);","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Game from './game';\nimport { Shop } from './shop';\nimport { SettingsModal } from './settings';\n\nimport { useGameReducer } from '../hooks/game';\n\nconst Container = styled.div`\n`;\n\nexport const GameContext = React.createContext();\n\nconst App = () => {\n  const [state, dispatch] = useGameReducer();\n  const [settings, setSettings] = useState(false);\n\n  const startGame = () => {\n    dispatch({ type: 'startGame' });\n  }\n  const returnHome = () => {\n    dispatch({ type: 'returnToHomeScreen' });\n  }\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      <Container>\n        {state.status === 'INITIAL' &&\n          <>\n            <button onClick={startGame}>Start Game</button>\n            <button onClick={() => setSettings(true)}>Settings</button>\n            <SettingsModal isOpen={settings} close={() => setSettings(false)} />\n          </>\n        }\n        {state.status === 'RUNNING' && <Game />}\n        {state.status === 'SHOP' && <Shop />}\n        {state.status === 'COMPLETED' && \n          <>\n            <h1>Game Over</h1>\n            Score Reached: {state.currentScore}\n            Goal Score: {state.goalScore}\n            <button onClick={startGame}>Play Again</button>\n            <button onClick={returnHome}>Return Home</button>\n          </>}\n      </Container>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}