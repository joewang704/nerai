{"version":3,"sources":["utils.js","data/targets.js","components/game_info.js","data/constants.js","components/game.js","components/shared/modal.js","components/shared/button.js","components/shared/util.js","components/shared/card.js","components/shop.js","utils/localStorage.js","components/settings.js","hooks/game.js","components/app.js","reportWebVitals.js","index.js"],"names":["random","min","max","Math","ceil","floor","degToRad","degrees","PI","useStableCB","callback","values","self","useRef","handler","_len","arguments","length","args","Array","_key","current","TIERS","generateRandomTarget","level","probs","base","l","startingIdx","total","t","rest","generateProbs","rng","bound","chosenTier","tier","effects","UPGRADE_INFO","baseTargets","description","maxLevel","extraSpawnOnHit","multiNextHit","multiOnConsecutiveHit","UPGRADES","Object","keys","INITIAL_UPGRADES","reduce","acc","value","getUpgradeDescription","_ref2","name","Container","styled","div","Left","Right","Center","TimeProgress","progress","GameInfo","_ref","timeRemaining","state","useContext","GameContext","upgradeDescriptions","entries","upgrades","filter","_","map","_ref3","join","scoreStyles","currentScore","goalScore","path","stroke","strokeLinecap","text","fill","fontWeight","console","log","round","_jsxs","_Fragment","children","style","padding","_jsx","toFixed","height","width","CircularProgressbar","maxValue","styles","Game","dispatch","canvasRef","canvas","setCanvas","useState","ctx","setCtx","timeRemainingRef","timeRemainingRender","setTimeRemainingRender","cursorRef","x","y","targetsRef","numbersRef","stateRef","useEffect","getContext","window","innerWidth","innerHeight","requestPointerLock","unadjustedMovement","pointerLockChange","lockChangeAlert","onClick","handleClick","document","addEventListener","removeEventListener","exitPointerLock","d3","tickAnimation","stop","pointerLockElement","screenX","screenY","hitTarget","newTargets","radius","target","targetMissed","sqrt","pow","type","payload","inc","setTimeout","createNewTarget","targetSize","drawCanvas","timerSec","fillStyle","fillRect","forEach","beginPath","arc","closePath","drawTargets","font","numbersToShow","_ref4","fillText","drawNumbers","timeElapsed","_ref5","numTargets","i","push","spawnTarget","timer","mozPointerLockElement","mouseMoveMemo","e","_ref6","dx","movementX","sensitivity","dy","movementY","ref","Background","Modal","close","createPortal","body","colorMap","red","green","pink","DEFAULT_COLOR","button","btnColor","background","Button","props","class","Centered","OptionContainer","CardOption","title","selected","borderColor","borderWidth","Shop","purchaseCardModal","setPurchaseCardModal","money","display","JSON","stringify","purchaseCard","count","choice","includes","generateRandomUpgrades","disabled","PurchaseCardModal","options","setSelected","collect","price","initialState","save","key","localStorage","setItem","SettingsModal","isOpen","step","onChange","event","status","getItem","parseInt","fetchInt","INITIAL_GAME_STATE","bumpLevel","reducer","action","newScore","newScoreState","Error","assign","upgrade","StartScreen","React","createContext","App","useReducer","settings","setSettings","startGame","Provider","returnHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ffe9b8f.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nexport const random = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n}\n\n// Takes in percent chance as a decimal, rolls that percent chance\nexport const rollProbability = (percent) => {\n  return Math.random() < percent; // The maximum is exclusive and the minimum is inclusive\n}\n\nexport const degToRad = (degrees) => Math.PI / 180 * degrees;\n\nexport const useStableCB = (callback, values) => {\n  const self = useRef({\n    values: values,\n    handler: (...args) => {\n      return callback(...args, self.current.values)\n    }\n  });\n  self.current.values = values\n  return self.current.handler\n}","import { random } from \"../utils\"\n\nexport const TIERS = ['gray', 'green', 'blue', 'purple', 'gold']\n\nexport const generateTarget = (tier) => {\n  return {\n    tier,\n    effects: [],\n  }\n}\n\nconst generateProbs = (level) => {\n  const base = [90, 9, 1, 0, 0];\n\n  for (let l = 1; l <= level; l++) {\n    let startingIdx = 2;\n    if (l > 9) {\n      startingIdx = 4\n    } else if (l > 4) {\n      startingIdx = 3\n    }\n    let total = 0;\n    for (let t = startingIdx; t > 0; t--) {\n      base[t] += 1;\n      total += base[t];\n    }\n    const rest = 100 - total;\n    base[0] = rest;\n  }\n  return base;\n}\n\nexport const generateRandomTarget = (level) => {\n  const probs = generateProbs(level);\n\n  const rng = random(0, 101);\n\n  let bound = 0;\n  let chosenTier = 0;\n  for (let tier = 0; tier < probs.length; tier++) {\n    bound += probs[tier];\n    if (rng < bound) {\n      chosenTier = tier;\n      break;\n    }\n  }\n\n  return {\n    tier: chosenTier,\n    effects: [],\n  }\n}\n\nexport const UPGRADE_INFO = {\n  baseTargets: {\n    description: level => `Increases base number of targets by ${level}`,\n    maxLevel: 5,\n  },\n  extraSpawnOnHit: {\n    description: level => `${level * 5}% chance of extra target spawning on hit`,\n    maxLevel: 5,\n  },\n  multiNextHit: {\n    description: level => `${level * 5}% chance of spawning a target that will x2 points on next target`,\n    maxLevel: 5,\n  },\n  multiOnConsecutiveHit: {\n    description: level => 'Not implemented yet. Do not choose',\n    maxLevel: 5,\n  },\n}\nexport const UPGRADES = Object.keys(UPGRADE_INFO)\nexport const INITIAL_UPGRADES = UPGRADES.reduce((acc, value) => {\n  acc[value] = 0;\n  return acc;\n}, {})\n\nexport const generateRandomUpgrade = () => {\n  return UPGRADES[random(0, UPGRADES.length)];\n}\n\nexport const generateRandomUpgrades = ({ count }) => {\n  const upgrades = [];\n  while (upgrades.length < count) {\n    const choice = generateRandomUpgrade();\n    if (!upgrades.includes(choice)) {\n      upgrades.push(choice);\n    }\n  }\n  return upgrades;\n}\n\nexport const getUpgradeDescription = ({ level, name }) => {\n  return UPGRADE_INFO[name].description(level + 1);\n}","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport { GameContext } from './app';\nimport { getUpgradeDescription } from '../data/targets';\nimport { ROUND_TIME } from '../data/constants';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 120px;\n  color: white;\n`;\n\nconst Left = styled.div`\n  float: left;\n`\n\nconst Right = styled.div`\n  float: right;\n`\n\nconst Center = styled.div`\n  margin: 0 auto;\n  width: 100px;\n`\n\nconst TimeProgress = styled.progress`\n  position: absolute;\n  top: 140px;\n  height: 5px;\n  width: 100%;\n`\n\nconst GameInfo = ({ timeRemaining }) => {\n  const { state } = useContext(GameContext);\n\n  const upgradeDescriptions = Object.entries(state.upgrades)\n    .filter(([_, level]) => level > 0)\n    .map(([name, level]) => getUpgradeDescription({ name, level }))\n    .join(', ');\n\n  const scoreStyles = state.currentScore >= state.goalScore ? {\n    path: {\n      stroke: 'green',\n      strokeLinecap: 'butt',\n    },\n    text: {\n      fill: 'green',\n      fontWeight: 'bold',\n    },\n  } : {\n    path: {\n      stroke: 'green',\n      strokeLinecap: 'butt',\n    },\n    text: {\n      fill: 'white',\n      fontWeight: 'bold',\n    },\n  };\n  console.log(timeRemaining)\n  console.log(Math.round(100*timeRemaining)/100)\n  console.log(ROUND_TIME)\n  console.log(typeof timeRemaining)\n\n  return (\n    <>\n      <Container style={{ padding: '16px' }}>\n        <Left>\n          <h1>Level {state.level}</h1>\n        </Left>\n        <Right>\n          <h1>{timeRemaining?.toFixed(2)}</h1>\n          <p>Upgrades</p>\n          <p>{upgradeDescriptions}</p>\n        </Right>\n        <Center>\n          <div style={{ height: 100, width: 100 }}>\n            <CircularProgressbar\n              value={state.currentScore / state.goalScore}\n              maxValue={1}\n              text={state.currentScore + ' / ' + state.goalScore}\n              styles={scoreStyles}\n            />\n          </div>\n        </Center>\n      </Container>\n      <TimeProgress value={timeRemaining} max={ROUND_TIME} />\n    </>\n  );\n};\n\nexport default GameInfo;","export const COLORS = {\n  darkYellow: '#F6BE00',\n  darkRed: '#8b0000',\n  metallicGray: '#A8A9AD',\n  omYellow: '#FACE26',\n  omOrange: '#FD871A',\n  omSand: '#F0E0BE',\n  // TODO: find better colors for HTML defaults\n  common: 'gray',\n  uncommon: 'green',\n  rare: 'blue',\n  epic: 'purple',\n  legendary: 'yellow',\n};\n\n// Real values\nexport const PURCHASE_CARD_PRICE = 30;\nexport const ROUND_TIME = 20;\nexport const INITIAL_GOAL_SCORE = 10;\nexport const COMPLETE_ROUND_ON_SCORE_HIT = true;","import React, { useEffect, useContext, useState, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from 'd3-timer';\n\nimport { GameContext } from './app';\nimport GameInfo from './game_info';\nimport { degToRad, random, useStableCB, rollProbability } from '../utils';\nimport { TIERS, generateRandomTarget } from '../data/targets';\n\nconst RADIUS = 5;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Game = () => {\n  const { state, dispatch } = useContext(GameContext);\n  const canvasRef = useRef(null);\n  const [canvas, setCanvas] = useState();\n  const [ctx, setCtx] = useState();\n  const timeRemainingRef = useRef();\n  const [timeRemainingRender, setTimeRemainingRender] = useState();\n  const cursorRef = useRef({ x: 500, y: 500 });\n  const targetsRef = useRef([]);\n  const numbersRef = useRef([]);\n  const stateRef = useRef(state);\n\n  useEffect(() => {\n    stateRef.current = state; \n  }, [state])\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    setCanvas(canvas);\n    const ctx = canvasRef.current.getContext('2d');\n    setCtx(ctx);\n    canvasRef.current.width = window.innerWidth;\n    canvasRef.current.height = window.innerHeight;\n    canvas.requestPointerLock({\n      unadjustedMovement: true,\n    });\n    const pointerLockChange = () => lockChangeAlert(canvas)\n    const onClick = () => handleClick()\n    document.addEventListener('pointerlockchange', pointerLockChange, false);\n    document.addEventListener('click', onClick);\n\n    return () => {\n      document.removeEventListener('pointerlockchange', pointerLockChange);\n      document.removeEventListener('click', onClick);\n      document.exitPointerLock();\n    };\n  }, [])\n\n  useEffect(() => {\n    let t;\n    if (canvas && ctx) {\n      t = d3.timer(tickAnimation)\n    }\n    return () => t && t.stop()\n  }, [canvas, ctx]);\n\n  const handleClick = () => {\n    if (!document.pointerLockElement) {\n      // Handle 100ms required delay to relock pointer\n      setTimeout(() => {\n        canvasRef.current.requestPointerLock({\n          unadjustedMovement: true,\n        });\n      }, 100);\n    } else {\n      const screenX = cursorRef.current.x;\n      const screenY = cursorRef.current.y;\n      const targets = targetsRef.current;\n      let hitTarget;\n      const newTargets = targets.filter(({ x, y, radius, target }) => {\n        // Filter out if target clicked inside\n        const targetMissed = Math.sqrt(Math.pow(x - screenX, 2) + Math.pow(y - screenY, 2)) >= (radius + RADIUS);\n        if (!targetMissed) {\n          hitTarget = target;\n        }\n        return targetMissed;\n      });\n\n      if (hitTarget) {\n        dispatch({ type: 'hitTarget', payload: { inc: hitTarget.tier + 1 }})\n        targetsRef.current = newTargets;\n      }\n    }\n  }\n\n  const createNewTarget = () => {\n    if (!canvasRef.current) {\n      // Return dummy target if target created while canvas does not exist (happens during race condition)\n      return { x: 0, y: 0, radius: 0, target: generateRandomTarget(0) };\n    }\n    const { targetSize, level } = state;\n    const { width, height } = canvasRef.current;\n    const x = random(width / 2 - width / 4, width - targetSize - width / 2);\n    const y = random(height / 2 - height / 4, height - targetSize - height / 2);\n    return { x, y, radius: targetSize, target: generateRandomTarget(level) };\n  }\n\n  const spawnTarget = (canvas) => {\n    const { baseTargets } = state.upgrades;\n    const numTargets = targetsRef.current.length;\n    if (numTargets <= baseTargets && canvas) {\n      for (let i = numTargets; i < baseTargets; i++) {\n        targetsRef.current.push(createNewTarget());\n      }\n      targetsRef.current.push(createNewTarget());\n    }\n  }\n\n  const drawTargets = (ctx) => {\n    targetsRef.current.forEach(({ x, y, radius, target }) => {\n      ctx.fillStyle = TIERS[target.tier];\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, degToRad(360), true);\n      ctx.fill();\n      ctx.closePath();\n    });\n  };\n\n  const drawNumbers = (ctx) => {\n    ctx.font = \"24px Arial\";\n    const numbersToShow = numbersRef.current.filter(({ timeRemaining }) => {\n      return timeRemaining < timeRemainingRef.current\n    });\n    numbersRef.current = numbersToShow;\n    numbersRef.current.forEach(({ x, y, text, style }) => {\n      ctx.fillStyle = style;\n      ctx.fillText(text, x, y)\n    });\n  };\n\n  const drawCanvas = (canvas, ctx, timerSec) => {\n    const { width, height } = canvas;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, width, height);\n\n    drawTargets(ctx);\n\n    drawNumbers(ctx, timerSec);\n\n    // Cursor\n    ctx.fillStyle = \"#f00\";\n    ctx.beginPath();\n    ctx.arc(cursorRef.current.x, cursorRef.current.y, RADIUS, 0, degToRad(360), true);\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  const tickAnimation = useStableCB((timeElapsed, [canvas, ctx]) => {\n    if (!canvas || !ctx) return;\n\n    spawnTarget(canvas);\n\n    // Handle timer state in game loop\n    const timeRemaining = state.timer - timeElapsed / 1000;\n    if (timeRemaining <= 0) {\n      return dispatch({ type: 'endRound' });\n    }\n    timeRemainingRef.current = timeRemaining;\n    setTimeRemainingRender(timeRemaining.toFixed(2));\n\n    drawCanvas(canvas, ctx, timeRemaining);\n\n  }, [canvas, ctx]);\n\n  const lockChangeAlert = (canvas) => {\n    if (document.pointerLockElement === canvas ||\n        document.mozPointerLockElement === canvas) {\n      canvas.addEventListener(\"mousemove\", mouseMoveMemo, false);\n    } else {\n      canvas.removeEventListener(\"mousemove\", mouseMoveMemo, false);\n    }\n  }\n\n  const mouseMoveMemo = useStableCB((e, [cursorRef, canvas]) => {\n    if (!canvas) return;\n    // Edge detection\n    const { x, y } = cursorRef.current;\n    if (x > canvas.width) {\n      cursorRef.current = { x: canvas.width - 1, y }\n      return\n    }\n    if (y > canvas.height) {\n      cursorRef.current = { x, y: canvas.height - 1 }\n      return\n    }  \n    if (x < 0) {\n      cursorRef.current = { x: 1, y }\n      return\n    }\n    if (y < 0) {\n      cursorRef.current = { x, y: 1 }\n      return\n    }\n    const dx = e.movementX * (state.sensitivity || 1);\n    const dy = e.movementY * (state.sensitivity || 1);\n    cursorRef.current = { x: x + dx, y: y + dy }\n  }, [cursorRef, canvas]);\n\n  return (\n    <Container>\n      <GameInfo timeRemaining={timeRemainingRef.current} />\n      <canvas ref={canvasRef}>\n      </canvas>\n    </Container>\n  );\n}\n\nexport default Game;\n","import { createPortal } from \"react-dom\";\nimport styled from '@emotion/styled';\n\nconst Background = styled.div`\n  background-color: black;\n  opacity: .4;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n`;\n\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: white;\n  padding: 24px;\n  border-radius: 16px;\n  opacity: 1;\n`;\n\nexport const Modal = ({ children, close }) => {\n  return (\n    <>\n      {createPortal(\n        <>\n        <Container>\n          {children}\n        </Container>\n        <Background onClick={close}></Background>\n        </>, document.body)}\n    </>\n  )\n}","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst colorMap = {\n  red: ['hsl(340deg 100% 32%)', 'hsl(345deg 100% 47%)'],\n  green: ['hsl(107deg 100% 25%)', 'hsl(107deg 100% 35%)'],\n  pink: ['hsl(333deg 100% 70%)', 'hsl(333deg 100% 78%)'],\n};\nconst DEFAULT_COLOR = 'pink';\n\nconst Container = styled.button`\n  background: hsl(340deg 100% 32%);\n  ${({ btnColor }) => ({ background: colorMap[btnColor ?? DEFAULT_COLOR][0] })}\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n\n  .front {\n    display: block;\n    padding: 12px 42px;\n    border-radius: 12px;\n    font-size: 1.25rem;\n    ${({ btnColor }) => ({ background: colorMap[btnColor ?? DEFAULT_COLOR][1] })}\n    color: white;\n    transform: translateY(-6px);\n  }\n\n  &:disabled {\n    opacity: .4;\n    cursor: default;\n  }\n\n  &:hover {\n  &:hover:not(:disabled) {\n    filter: brightness(110%);\n  }\n  &:hover:not(:disabled) .front {\n    transform: translateY(-6px);\n    transition:\n      transform\n      250ms\n      cubic-bezier(.3, .7, .4, 1.5);\n  }\n  &:active:not(:disabled) .front {\n    transform: translateY(-2px);\n    transition: transform 34ms;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const Button = ({ children, ...props }) => (\n  <Container {...props}>\n    <span class=\"front\">\n      {children}\n    </span>\n  </Container>\n);\n","import styled from '@emotion/styled';\n\nexport const Centered = styled.div`\n  font-weight: 600;\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n`;","import styled from '@emotion/styled';\n\nimport { TIERS } from \"../../data/targets\";\n\nconst Container = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n`;\n\nexport const Card = ({ tier }) => {\n  return (\n    <Container style={{ borderColor: TIERS[tier] }}>\n      N/A\n    </Container>\n  )\n}\n\nconst OptionContainer = styled.div`\n  padding: 4px;\n  border: 3px solid #eee;\n  border-radius: 4px;\n  cursor: pointer;\n  hover {\n    opacity: .6;\n  }\n`;\n\nexport const CardOption = ({ title, description, onClick, selected }) => {\n  return (\n    <OptionContainer style={{ borderColor: '#eee', borderWidth: selected ? '5px' : '3px', fontWeight: selected ? 'bold' : 'normal' }} onClick={onClick}>\n      {title}<br />\n      {description}\n    </OptionContainer>\n  )\n}","import React, { useState, useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport { generateRandomUpgrades, getUpgradeDescription, UPGRADES } from '../data/targets';\nimport { PURCHASE_CARD_PRICE } from '../data/constants';\nimport { Modal } from \"./shared/modal\";\nimport { Button } from \"./shared/button\";\nimport { Centered } from \"./shared/util\";\nimport { Card, CardOption } from \"./shared/card\";\nimport { GameContext } from './app';\n\nconst Container = styled(Centered)`\n  display: flex;\n  flex-direction: column;\n  color: white;\n`;\n\nexport const Shop = () => {\n  const [purchaseCardModal, setPurchaseCardModal] = useState();\n  const { state, dispatch } = useContext(GameContext);\n\n  const purchaseCard = () => {\n    setPurchaseCardModal(generateRandomUpgrades({ count: 3 }));\n  };\n\n  return (\n    <Container>\n      <h1>Shop</h1>\n      Current Gold: {state.money}\n      <br />\n      Current Upgrades: \n      <div style={{ display: 'flex'}}>\n        {JSON.stringify(state.upgrades)}\n      </div>\n      <br /><br />\n      <Button onClick={purchaseCard} disabled={state.money < PURCHASE_CARD_PRICE}>Purchase Upgrade ({PURCHASE_CARD_PRICE} gold)</Button>\n      <br />\n      <Button onClick={() => dispatch({ type: 'startNextRound' })}>Next Level</Button>\n      <PurchaseCardModal options={purchaseCardModal} close={() => setPurchaseCardModal()} />\n    </Container>\n  );\n}\n\nconst PurchaseCardModal = ({ options, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n  const [selected, setSelected] = useState(0);\n\n  const collect = () => {\n    dispatch({ type: 'upgrade', payload: { upgrades: [options[selected]], price: PURCHASE_CARD_PRICE }})\n    close();\n  }\n\n  return (\n    options ? <Modal close={() => {}}>\n      <h1>Choose Your Card</h1>\n      {options.map((name, i) => {\n        const level = state.upgrades[name];\n        return (\n          <CardOption\n            key={i}\n            title={'Level ' + level}\n            description={getUpgradeDescription({ level, name })}\n            onClick={() => setSelected(i)}\n            selected={selected === i}\n          />\n        )\n      })}\n      <button onClick={collect}>Collect</button>\n    </Modal> : <></>\n  );\n}\n\n","const initialState = {\n  sensitivity: 0.4,\n  targetSize: 8,\n}\n\n// Key can be sensitivity, targetSize, etc.\nexport const save = (key, value) => localStorage.setItem(key, value);\nexport const fetch = (key) => localStorage.getItem(key) || initialState[key];\nexport const fetchInt = (key) => parseInt(localStorage.getItem(key) || initialState[key]);","import { useEffect, useContext } from 'react';\n\nimport { Modal } from \"./shared/modal\";\nimport { Button } from \"./shared/button\";\nimport { GameContext } from './app';\n\nimport { save } from '../utils/localStorage';\n\nexport const SettingsModal = ({ isOpen, close }) => {\n  const { state, dispatch } = useContext(GameContext);\n\n  useEffect(() => {\n    const { sensitivity, targetSize } = state;\n    if (sensitivity) {\n      save('sensitivity', sensitivity);\n    }\n    if (targetSize) {\n      save('targetSize', targetSize);\n    }\n  }, [state.sensitivity, state.targetSize]);\n\n  return (\n    isOpen ? <Modal close={close}>\n      <h1>Settings</h1>\n      <div>\n        Sensitivity: &nbsp;\n        <input \n          type=\"number\"\n          step=\"0.01\"\n          value={state.sensitivity} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { sensitivity: event.target.value } })\n          }\n        />\n      </div>\n      <div>\n        Target Size (in px): &nbsp;\n        <input \n          type=\"number\"\n          step=\"1\"\n          value={state.targetSize} onChange={(event) =>\n            dispatch({ type: 'changeSettings', payload: { targetSize: event.target.value } })\n          }\n        />\n      </div>\n      <br />\n      <Button onClick={close}>Save</Button>\n    </Modal> : <></>\n  );\n}","import { useReducer } from 'react';\n\nimport { fetch, fetchInt } from '../utils/localStorage';\nimport { INITIAL_UPGRADES } from '../data/targets';\nimport { ROUND_TIME, INITIAL_GOAL_SCORE, COMPLETE_ROUND_ON_SCORE_HIT } from '../data/constants';\n\nconst initialState = {\n  status: 'INITIAL',\n  sensitivity: fetch('sensitivity'),\n  targetSize: fetchInt('targetSize'),\n};\n\nconst INITIAL_GAME_STATE = {\n  timer: ROUND_TIME,\n  currentScore: 0,\n  goalScore: INITIAL_GOAL_SCORE,\n  level: 1,\n  money: 0,\n  upgrades: INITIAL_UPGRADES,\n}\n\nconst bumpLevel = (state) => ({\n  ...state,\n  money: state.money + state.currentScore,\n  currentScore: 0,\n  level: state.level + 1,\n  goalScore: Math.ceil(state.goalScore * 1.2),\n  status: 'SHOP',\n});\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'changeSettings': {\n      return {\n        ...state,\n        sensitivity: action.payload.sensitivity || state.sensitivity,\n        targetSize: action.payload.targetSize || state.targetSize,\n      }\n    }\n    case 'returnToHomeScreen': {\n      return {\n        status: 'INITIAL',\n      }\n    }\n    case 'startGame':\n      return {\n        ...state,\n        status: 'RUNNING',\n        ...INITIAL_GAME_STATE,\n      }\n    // In-game actions\n    case 'hitTarget':\n      const newScore = state.currentScore + action.payload.inc;\n      const newScoreState = {\n        ...state,\n        currentScore: newScore,\n      };\n      if (newScore >= state.goalScore && COMPLETE_ROUND_ON_SCORE_HIT) {\n        // Complete round\n        return bumpLevel(newScoreState);\n      }\n      return newScoreState;\n    case 'endRound':\n      if (state.currentScore >= state.goalScore) {\n        return bumpLevel(state);\n      }\n      return {\n        ...state,\n        status: 'COMPLETED',\n      }\n    case 'upgrade':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to purchase')\n      }\n      const upgrades = Object.assign({}, state.upgrades);\n      action.payload.upgrades.forEach(upgrade => upgrades[upgrade]++);\n      return {\n        ...state,\n        money: state.money - action.payload.price,\n        upgrades,\n      }\n    case 'startNextRound':\n      if (!state.status === 'SHOP') {\n        throw new Error('Must be in shop to begin next round')\n      }\n      return {\n        ...state,\n        status: 'RUNNING',\n        timer: ROUND_TIME,\n      }\n    default:\n      throw new Error('Action not recognized - ' + action.type)\n  }\n}\n\nexport const useGameReducer = () => useReducer(reducer, initialState);","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport Game from './game';\nimport { Shop } from './shop';\nimport { SettingsModal } from './settings';\nimport { Button } from './shared/button';\nimport { Centered } from './shared/util';\n\nimport { useGameReducer } from '../hooks/game';\n\nconst Container = styled.div`\n  color: white;\n`;\n\nconst StartScreen = styled(Centered)`\n  font-weight: 600;\n  text-transform: uppercase;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  button {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const GameContext = React.createContext();\n\nconst App = () => {\n  const [state, dispatch] = useGameReducer();\n  const [settings, setSettings] = useState(false);\n\n  const startGame = () => {\n    dispatch({ type: 'startGame' });\n  }\n  const returnHome = () => {\n    dispatch({ type: 'returnToHomeScreen' });\n  }\n\n  return (\n    <GameContext.Provider value={{ state, dispatch }}>\n      <Container>\n        {state.status === 'INITIAL' &&\n          <StartScreen>\n            <Button onClick={startGame}>Start Game</Button>\n            <Button onClick={() => setSettings(true)}>Settings</Button>\n            <SettingsModal isOpen={settings} close={() => setSettings(false)} />\n          </StartScreen>\n        }\n        {state.status === 'RUNNING' && <Game />}\n        {state.status === 'SHOP' && <Shop />}\n        {state.status === 'COMPLETED' && \n          <StartScreen>\n            <h1>Game Over</h1>\n            <p>Level Reached: {state.level}</p>\n            <p>Score Reached: {state.currentScore}</p>\n            <p>Goal Score: {state.goalScore}</p>\n            <Button onClick={startGame}>Play Again</Button>\n            <Button onClick={returnHome}>Return Home</Button>\n          </StartScreen>}\n      </Container>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}